# -*- coding: utf-8 -*-
"""MetodoBiseccion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lqKz1l7MGUdUfBAte6nx7_KK2L3zTQCB
"""

import numpy as np
import matplotlib.pyplot as plt

f = lambda x: 2*x*np.cos(2*x) - (x + 1)**2

a = -3
b = -2
n = 5

iteraciones = []

for i in range(n):

    x_i = (a + b) / 2

    if i > 0:
        error_r = abs((x_i - x_ant) / x_i)
    else:
        error_r = None

    iteraciones.append([i+1, round(x_i, 4), round(a, 4), round(b, 4), round(error_r, 4) if error_r is not None else 'N/A'])

    if f(a) * f(x_i) < 0:
        b = x_i
    else:
        a = x_i

    x_ant = x_i

print("\nTabla de resultados:")
print(f"{'Iteración':<12}{'Raíz Estimada':<18}{'a':<10}{'b':<10}{'Error Relativo (εr)'}")
for it in iteraciones:
    print(f"{it[0]:<12}{it[1]:<18}{it[2]:<10}{it[3]:<10}{it[4]}")

x_vals = np.linspace(-4, -1, 400)
y_vals = f(x_vals)

plt.plot(x_vals, y_vals, label="f(x) = 2x*cos(2x) - (x + 1)^2")
plt.axhline(0, color='black', linewidth=0.5)
plt.scatter(x_i, f(x_i), color='red', label=f"Raíz estimada: {round(x_i, 4)}", zorder=5)
plt.title("Gráfica de la función y la raíz estimada")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.legend()
plt.grid(True)
plt.show()