# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D5SAf1dV87Y84Q-7Y9naNZxsV7UP1Yhb
"""

import numpy as np
import matplotlib.pyplot as plt

f = lambda x: 8*x*np.sin(x)*np.exp(-x) - 1

x_menos1 = 0.5
x0 = -0.3
n = 5

iteraciones = []

for i in range(n):

    if f(x0) != f(x_menos1):
        x_next = x0 - (f(x0) * (x0 - x_menos1)) / (f(x0) - f(x_menos1))
    else:
        x_next = x0

    if i > 0:
        error_r = abs((x_next - x0) / x_next)
    else:
        error_r = None

    iteraciones.append([i+1, round(x0, 4), round(x_next, 4), round(error_r, 4) if error_r is not None else 'N/A'])

    x_menos1 = x0
    x0 = x_next

print("\nTabla de resultados:")
print(f"{'Iteración':<12}{'x_i':<18}{'x_{i+1}':<18}{'Error Relativo (εr)'}")
for it in iteraciones:
    print(f"{it[0]:<12}{it[1]:<18}{it[2]:<18}{it[3]}")

x_vals = np.linspace(-2, 2, 400)
y_vals = f(x_vals)

plt.plot(x_vals, y_vals, label="f(x) = 8x*sin(x)*e^(-x) - 1")
plt.axhline(0, color='black', linewidth=0.5)
plt.scatter(x_next, f(x_next), color='red', label=f"Raíz estimada: {round(x_next, 4)}", zorder=5)
plt.title("Gráfica de la función y la raíz estimada")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.legend()
plt.grid(True)
plt.show()